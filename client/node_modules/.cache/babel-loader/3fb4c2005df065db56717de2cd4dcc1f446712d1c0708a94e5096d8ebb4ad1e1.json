{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RK\\\\Downloads\\\\opentalk_voice_app\\\\client\\\\src\\\\pages\\\\Connect.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { io } from 'socket.io-client';\n\n// let socket;\n\n// export default function Connect({ user, token }) {\n//   const [status, setStatus] = useState('idle');\n//   const [partner, setPartner] = useState(null);\n//   const [roomId, setRoomId] = useState(null);\n\n//   useEffect(() => {\n//     socket = io('http://localhost:5000');\n//     socket.on('connect', () => {\n//       console.log('socket connected', socket.id);\n//       // tell server who we are\n//       socket.emit('iamonline', { userId: user.id });\n//     });\n\n//     socket.on('waiting', () => {\n//       setStatus('waiting');\n//     });\n\n//     socket.on('matched', ({ roomId, partner }) => {\n//       setStatus('matched');\n//       setPartner(partner);\n//       setRoomId(roomId);\n//       // navigate to call page - we will reuse a simple render switch: show call UI below\n//     });\n\n//     socket.on('disconnect', () => {\n//       setStatus('disconnected');\n//     });\n\n//     return () => {\n//       if (socket) socket.disconnect();\n//     };\n//   }, []);\n\n//   const start = () => {\n//     setStatus('searching');\n//     socket.emit('findPartner', { userId: user.id });\n//   };\n\n//   const stop = () => {\n//     if (socket) socket.emit('leave', { userId: user.id, roomId });\n//     setStatus('idle');\n//     setPartner(null);\n//     setRoomId(null);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Connect</h2>\n//       <p>Status: {status}</p>\n//       {status === 'idle' && <button onClick={start}>Connect</button>}\n//       {(status === 'waiting' || status === 'searching') && <button onClick={stop}>Cancel</button>}\n//       {status === 'matched' && partner && (\n//        <div>\n//       <h3>Connected with {partner.username}</h3>\n//       <button onClick={() => setPage('call')}>Go to Call</button>\n//       <p>Room: {roomId}</p>\n//     </div>\n//       )}\n//     </div>\n//   );\n// }\nimport React, { useEffect, useState } from 'react';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Connect({\n  user,\n  token,\n  setPage,\n  setRoomInfo\n}) {\n  _s();\n  const [status, setStatus] = useState('idle');\n  const [partner, setPartner] = useState(null);\n  const [roomId, setRoomId] = useState(null);\n  useEffect(() => {\n    socket.emit('iamonline', {\n      userId: user.id\n    });\n    const onWaiting = () => setStatus('waiting');\n    const onMatched = ({\n      roomId,\n      partner\n    }) => {\n      setStatus('matched');\n      setPartner(partner);\n      setRoomId(roomId);\n      // store room info to App.js state\n      setRoomInfo({\n        roomId,\n        partner\n      });\n    };\n    socket.on('waiting', onWaiting);\n    socket.on('matched', onMatched);\n    return () => {\n      socket.off('waiting', onWaiting);\n      socket.off('matched', onMatched);\n    };\n  }, []);\n  const start = () => {\n    setStatus('searching');\n    socket.emit('findPartner', {\n      userId: user.id\n    });\n  };\n  const stop = () => {\n    if (roomId) socket.emit('leave', {\n      userId: user.id,\n      roomId\n    });\n    setStatus('idle');\n    setPartner(null);\n    setRoomId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), status === 'idle' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: start,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }, this), (status === 'waiting' || status === 'searching') && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stop,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 60\n    }, this), status === 'matched' && partner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Connected with \", partner.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('call'),\n        children: \"Go to Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Room: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(Connect, \"gm/7sM3yoKssacfeHQQw/f1g8LQ=\");\n_c = Connect;\nvar _c;\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"names":["React","useEffect","useState","socket","jsxDEV","_jsxDEV","Connect","user","token","setPage","setRoomInfo","_s","status","setStatus","partner","setPartner","roomId","setRoomId","emit","userId","id","onWaiting","onMatched","on","off","start","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","username","_c","$RefreshReg$"],"sources":["C:/Users/RK/Downloads/opentalk_voice_app/client/src/pages/Connect.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { io } from 'socket.io-client';\n\n// let socket;\n\n// export default function Connect({ user, token }) {\n//   const [status, setStatus] = useState('idle');\n//   const [partner, setPartner] = useState(null);\n//   const [roomId, setRoomId] = useState(null);\n\n//   useEffect(() => {\n//     socket = io('http://localhost:5000');\n//     socket.on('connect', () => {\n//       console.log('socket connected', socket.id);\n//       // tell server who we are\n//       socket.emit('iamonline', { userId: user.id });\n//     });\n\n//     socket.on('waiting', () => {\n//       setStatus('waiting');\n//     });\n\n//     socket.on('matched', ({ roomId, partner }) => {\n//       setStatus('matched');\n//       setPartner(partner);\n//       setRoomId(roomId);\n//       // navigate to call page - we will reuse a simple render switch: show call UI below\n//     });\n\n//     socket.on('disconnect', () => {\n//       setStatus('disconnected');\n//     });\n\n//     return () => {\n//       if (socket) socket.disconnect();\n//     };\n//   }, []);\n\n//   const start = () => {\n//     setStatus('searching');\n//     socket.emit('findPartner', { userId: user.id });\n//   };\n\n//   const stop = () => {\n//     if (socket) socket.emit('leave', { userId: user.id, roomId });\n//     setStatus('idle');\n//     setPartner(null);\n//     setRoomId(null);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Connect</h2>\n//       <p>Status: {status}</p>\n//       {status === 'idle' && <button onClick={start}>Connect</button>}\n//       {(status === 'waiting' || status === 'searching') && <button onClick={stop}>Cancel</button>}\n//       {status === 'matched' && partner && (\n//        <div>\n//       <h3>Connected with {partner.username}</h3>\n//       <button onClick={() => setPage('call')}>Go to Call</button>\n//       <p>Room: {roomId}</p>\n//     </div>\n//       )}\n//     </div>\n//   );\n// }\nimport React, { useEffect, useState } from 'react';\nimport socket from '../socket';\n\nexport default function Connect({ user, token, setPage, setRoomInfo }) {\n  const [status, setStatus] = useState('idle');\n  const [partner, setPartner] = useState(null);\n  const [roomId, setRoomId] = useState(null);\n\n  useEffect(() => {\n    socket.emit('iamonline', { userId: user.id });\n\n    const onWaiting = () => setStatus('waiting');\n    const onMatched = ({ roomId, partner }) => {\n      setStatus('matched');\n      setPartner(partner);\n      setRoomId(roomId);\n      // store room info to App.js state\n      setRoomInfo({ roomId, partner });\n    };\n\n    socket.on('waiting', onWaiting);\n    socket.on('matched', onMatched);\n\n    return () => {\n      socket.off('waiting', onWaiting);\n      socket.off('matched', onMatched);\n    };\n  }, []);\n\n  const start = () => {\n    setStatus('searching');\n    socket.emit('findPartner', { userId: user.id });\n  };\n\n  const stop = () => {\n    if (roomId) socket.emit('leave', { userId: user.id, roomId });\n    setStatus('idle');\n    setPartner(null);\n    setRoomId(null);\n  };\n\n  return (\n    <div>\n      <h2>Connect</h2>\n      <p>Status: {status}</p>\n      {status === 'idle' && <button onClick={start}>Connect</button>}\n      {(status === 'waiting' || status === 'searching') && <button onClick={stop}>Cancel</button>}\n      {status === 'matched' && partner && (\n        <div>\n          <h3>Connected with {partner.username}</h3>\n          <button onClick={() => setPage('call')}>Go to Call</button>\n          <p>Room: {roomId}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}